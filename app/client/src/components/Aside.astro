---
type Tabs = "Notes" | "Settings" | "Help";

interface Tab {
  tab: Tabs;
  icon: string;
  href: string;
}

export interface Props {
  currentTab?: Tabs;
}

const tabs: Tab[] = [
  {
    tab: "Notes",
    icon: "📝",
    href: "/",
  },
  {
    tab: "Settings",
    icon: "⚙️",
    href: "/settings",
  },
  {
    tab: "Help",
    icon: "❓",
    href: "/help",
  },
];

const { currentTab } = Astro.props;
---

<aside
  class="border-r border-neutral-600 resize-x overflow-auto max-w-72 min-w-48 w-min"
>
  <nav class="flex flex-col gap-2 pr-2 pt-2">
    <a
      href="/note/new"
      class="bg-blue-500 bg-opacity-25 rounded flex justify-center items-center gap-2 mb-2"
    >
      <span class="text-4xl">+</span>
      <span class="text-center">New Note</span>
    </a>
    {
      tabs.map(({ tab, icon, href }) => (
        <a
          class="rounded p-1 bg-neutral-500"
          class:list={[currentTab === tab ? "bg-opacity-35" : "bg-opacity-15"]}
          href={href}
        >
          {icon} {tab}
        </a>
      ))
    }
  </nav>
</aside>
