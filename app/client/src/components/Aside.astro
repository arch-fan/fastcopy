---
type Tabs = "Notes" | "Settings";

interface Tab {
  tab: Tabs;
  icon: string;
  href: string;
  className?: string;
}

export interface Props {
  currentTab?: Tabs;
}

const tabs: Tab[] = [
  {
    tab: "Notes",
    icon: "📝",
    href: "/",
  },
  {
    tab: "Settings",
    icon: "⚙️",
    href: "/settings",
  },
];

const { currentTab } = Astro.props;
---

<aside class="border-r">
  <nav class="flex flex-col gap-2 pr-2">
    <div class="w-full px-8 pt-2">
      <a href="/note/new">
        <svg class="bg-blue-500 bg-opacity-25 rounded-xl" viewBox="0 0 24 24"
          ><path fill="currentColor" d="M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6z"
          ></path></svg
        >
      </a>
    </div>
    {
      tabs.map(({ tab, icon, href, className }) => (
        <a
          class="rounded p-1 bg-neutral-500"
          class:list={[currentTab === tab ? " bg-opacity-35" : "bg-opacity-15"]}
          href={href}
        >
          {icon} {tab}
        </a>
      ))
    }
  </nav>
</aside>
